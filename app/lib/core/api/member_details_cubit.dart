// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unreachable_switch_default, prefer_const_constructors
import 'package:convert/convert.dart';

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'package:uuid/uuid.dart';
import 'types.dart';
import 'user_cubit.dart';
part 'member_details_cubit.freezed.dart';

// These functions are ignored because they are not marked as `pub`: `load_and_emit_state`, `update_state_task`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `MemberDetailsContext`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `assert_receiver_is_total_eq`, `clone`, `clone`, `clone`, `eq`, `eq`, `fmt`, `fmt`, `hash`, `hash`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<MemberDetailsCubitBase>>
abstract class MemberDetailsCubitBase implements RustOpaqueInterface {
  Future<void> close();

  bool get isClosed;

  factory MemberDetailsCubitBase({
    required UserCubitBase userCubit,
    required ChatId chatId,
  }) =>
      RustLib.instance.api.crateApiMemberDetailsCubitMemberDetailsCubitBaseNew(
        userCubit: userCubit,
        chatId: chatId,
      );

  MemberDetailsState get state;

  Stream<MemberDetailsState> stream();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UiRoomState>>
abstract class UiRoomState implements RustOpaqueInterface {
  bool canKick({required UiUserId target});
}

@freezed
sealed class MemberDetailsState with _$MemberDetailsState {
  const MemberDetailsState._();
  const factory MemberDetailsState({UiRoomState? roomState}) =
      _MemberDetailsState;
  static Future<MemberDetailsState> default_() =>
      RustLib.instance.api
          .crateApiMemberDetailsCubitMemberDetailsStateDefault();
}
