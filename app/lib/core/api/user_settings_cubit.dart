// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: unreachable_switch_default, prefer_const_constructors
import 'package:convert/convert.dart';

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'user.dart';
import 'user_cubit.dart';
part 'user_settings_cubit.freezed.dart';

// These functions are ignored because they are not marked as `pub`: `f64_decode`, `f64_encode`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `InterfaceScaleSetting`, `SendOnEnterSetting`, `SidebarWidthSetting`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `decode`, `decode`, `decode`, `encode`, `encode`, `encode`, `fmt`
// These functions are ignored (category: IgnoreBecauseExplicitAttribute): `default`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<UserSettingsCubitBase>>
abstract class UserSettingsCubitBase implements RustOpaqueInterface {
  Future<void> close();

  bool get isClosed;

  Future<void> loadState({required User user});

  factory UserSettingsCubitBase() =>
      RustLib.instance.api.crateApiUserSettingsCubitUserSettingsCubitBaseNew();

  Future<void> reset();

  Future<void> setInterfaceScale({
    required UserCubitBase userCubit,
    required double value,
  });

  Future<void> setSendOnEnter({
    required UserCubitBase userCubit,
    required bool value,
  });

  Future<void> setSidebarWidth({
    required UserCubitBase userCubit,
    required double value,
  });

  UserSettings get state;

  Stream<UserSettings> stream();
}

@freezed
sealed class UserSettings with _$UserSettings {
  const factory UserSettings({
    @Default(1.0) double interfaceScale,
    @Default(300.0) double sidebarWidth,
    @Default(false) bool sendOnEnter,
  }) = _UserSettings;
}
