// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: unreachable_switch_default, prefer_const_constructors
import 'package:convert/convert.dart';

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'message_content.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:uuid/uuid.dart';
import 'user_cubit.dart';

// These functions are ignored because they are not marked as `pub`: `attachment_downloads_loop`, `new`, `spawn_attachment_downloads`, `spawn_download_task`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `AttachmentsStateInner`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AttachmentsCubitBase>>
abstract class AttachmentsCubitBase implements RustOpaqueInterface {
  Future<void> close();

  bool get isClosed;

  Future<Uint8List> loadAttachment({required AttachmentId attachmentId});

  factory AttachmentsCubitBase({required UserCubitBase userCubit}) => RustLib
      .instance
      .api
      .crateApiAttachmentsCubitAttachmentsCubitBaseNew(userCubit: userCubit);

  AttachmentsState get state;

  Stream<AttachmentsState> stream();
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<AttachmentsState>>
abstract class AttachmentsState implements RustOpaqueInterface {}
