# SPDX-FileCopyrightText: 2024 Phoenix R&D GmbH <hello@phnx.im>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

services:
  postgres:
    image: postgres:17.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: phnx_db
    userns_mode: "keep-id:uid=999,gid=999"
    command: >
      postgres
      -c max_connections=1000
      -c shared_buffers=2GB
      -c ssl=on
      -c ssl_cert_file=/etc/postgresql/certs/server.crt
      -c ssl_key_file=/etc/postgresql/certs/server.key
      -c ssl_ca_file=/etc/postgresql/certs/root.crt

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost -s"]
      start_period: 10s
      interval: 2s
      timeout: 5s
      retries: 10
    ports:
      - ${COMPOSE_BIND_HOST:-127.0.0.1}:5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data:z
      - ./backend/test_certs/server.crt:/etc/postgresql/certs/server.crt:ro,z
      - ./backend/test_certs/server.key:/etc/postgresql/certs/server.key:ro,z
      - ./backend/test_certs/root.crt:/etc/postgresql/certs/root.crt:ro,z

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      start_period: 10s
      interval: 2s
      timeout: 5s
      retries: 10

  minio-setup:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"
    entrypoint: >
      sh -exc "
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc admin user add local minioaccesskey miniosecretkey;
      mc admin policy attach local readwrite --user=minioaccesskey;
      mc mb local/data"

x-podman:
  in_pod: false

volumes:
  postgres_data:
  minio_data:
