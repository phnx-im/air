# SPDX-FileCopyrightText: 2025 Phoenix R&D GmbH <hello@phnx.im>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Update Goldens

on: workflow_dispatch

jobs:
  update_linux_goldens:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: Update Golden Files
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    defaults:
      run:
        shell: bash

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Just
        uses: extractions/setup-just@v2

      - name: Set up Flutter FVM
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: 'app/.fvmrc'
          cache: false # no need caching in a manual workflow

      - name: Run Flutter tests and update goldens
        run: just test-flutter --update-goldens

      - name: Push changes
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

          git fetch origin $BRANCH_NAME
          git checkout $BRANCH_NAME

          git add app/test
          git commit -m "Update golden files" || echo "No changes to commit."
          git clean -df

          # Retry push if there are upstream changes
          MAX_RETRIES=3
          COUNT=0

          until git push; do
            COUNT=$((COUNT+1))
            if [ "$COUNT" -ge "$MAX_RETRIES" ]; then
              echo "Push failed after $MAX_RETRIES attempts."
              exit 1
            fi
            echo "Push failed, attempting to rebase and retry ($COUNT/$MAX_RETRIES)..."
            git fetch origin "$BRANCH_NAME"
            git rebase "origin/$BRANCH_NAME"
          done
