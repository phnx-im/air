# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

require 'xcodeproj'
require 'plist'

default_platform(:ios)

platform :ios do
  desc "Build app for TestFlight"
  lane :beta_ios do
    # Set XCode version
    xcversion(version: "15.4") 
    xcodes(
      version: '15.4',
      select_for_current_build_only: true,
    )

    # Set up CI
    setup_ci()

    # Set parameters
    key_id = ENV['APP_STORE_KEY_ID']
    issuer_id = ENV['APP_STORE_ISSUER_ID']
    key_content = ENV['APP_STORE_KEY_P8_BASE64']
    team_id = ENV['TEAM_ID']
    matchType = "appstore"
    app_identifier = "im.phnx.prototype"
    app_identifier_nse = "im.phnx.prototype.nse"

    # Load the app store connect API key
    api_key = app_store_connect_api_key(
      key_id: key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      is_key_content_base64: true,
      in_house: false
    )

    # Fetch the latest TestFlight build number and increment it by 1
    build_number =  latest_testflight_build_number(
      version: "1.0.0",
      api_key: api_key,
      app_identifier: app_identifier
    )
    increment_build_number(
      xcodeproj: "ios/Runner.xcodeproj",
      build_number: build_number + 1,
    )

    # Use match for code signing
    match(
      type: matchType,
      git_url: ENV['MATCH_GIT_URL'],
      git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'],
      git_branch: "main",
      storage_mode: "git",
      app_identifier: [app_identifier, app_identifier_nse],
      team_id: team_id,
      readonly: is_ci,
    )

    # Install flutter dependencies
    sh "flutter pub get"

    # Install CocoaPods dependencies
    cocoapods(
      clean: true,
      podfile: "ios/Podfile"
    )
    
    # Build the app
    build_app(
      workspace: "ios/Runner.xcworkspace", 
      scheme: "Runner",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        provisioningProfiles: {
          "im.phnx.prototype" => "match AppStore im.phnx.prototype",
          "im.phnx.prototype.nse" => "match AppStore im.phnx.prototype.nse"
        },
        signingStyle: "manual"
      }
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :upload_to_test_flight do

    # Upload the app to TestFlight
    upload_to_testflight(
     api_key: api_key, 
     skip_waiting_for_build_processing: true,
     distribute_external: false,
    )
  end
end
